Задачи Python

1.  Построить Web – приложение (использовать Django) с применением отношений (обобщения, ассоциации, использования, реализации) между классами. Задать атрибуты и методы классов.(Приложение должно быть создано в двух вариантах с использованием  наследования и воплощения, т.е метаклассов)
Ввести (если необходимо) дополнительные классы. Система Факультатив. Преподаватель объявляет запись на Курс. Студент записывается на Курс, обучается и по окончании Преподаватель выставляет Оценку, которая сохраняется в Архиве. Студентов, Преподавателей и Курсов при обучении может быть несколько. 
Данные хранить в БД. Приложение должно быть развернуто с использованием Google Apps Engine. 

2. Создать веб сервис на Python (использовать framework Django), который интерполирует функцию методом кубических сплайнов. При этом клиент должен быть написан на Java.
3. Создать приложение с использованием библиотеки Grab:Spider, которое будет грабить новостные сайты и создавать html файл с последними новостями. 
4.  Написать почтовый клиент  с графическим интерфейсом, использовать библиотеку Qt (можно использовать PySide), который может принимать  и оправлять письма, а также добавлять атачменты. 

5.  Используя Django, написать клиент-серверное приложение. Сервер запускается на удаленном компьютере считывает файлы из указанной директории, создает web страницу с ссылками на эти файлы и пересылает клиенту (Web браузеру).Использовать систему логгирования logging.

6. Создать графическое приложение(использовать черепашью графику), которое по точкам строит выпуклую оболочку методом разделяй и властвуй(задачу распаралелить используя Parallel Python)

7.  Напишите многопоточную программу, которая читает содержимое файлов, имена которых перечислены в командной строке (и рекурсивно - содержимое файлов во всех каталогах, перечисленных в командной строке). Все файлы, которые являются файлами XML (файл должен быть проверен на валидность структуры, т.е. должен быть xsd файл ) следует проанализировать  с помощью парсера XML(должно быть два варианта, в первом использовать  DOM анализатор, а во втором SAX анализатор), и для каждого создать txt файл с содержимым xml.

8.  Напишите чат с использованием Web сокетов (использовать библиотеку TornadIO2). Клиент(браузер) посылает через сервер сообщение, которое получает соответствующий клиент (предусмотреть broadcast  сообщения). Список клиентов хранится в базе данных (использовать Oracle).
9. Создать игру морской бой (клиент PyQt5), сервер создать с использованием twisted, сервер получает сообщение и пересылает другому клиенту.
10. Создать приложение которое дифференцирует сложную функцию (может быть функция многих аргументов) в символьном виде. (Использовать библиотеку SymPy нельзя).
11.  Используя Chaco, создать треугольник Серпинского.
12. Получение и обработка результатов поиска с сайта www.google.com 
      Входные данные: 
       -поисковый запрос через веб-форму 
Выходные данные: 
- многомерный массив со смешанным индексированием, где результаты поиска представляются в виде одномерного индексируемого массива с  индексом, равным порядковому номеру результата поиска, а значение – в виде  одномерного ассоциативного массива с ключами title, description, url и  соответсвующими значениями. 
- Интересуют только первые 10 результатов.
Дополнительная функциональность (опционально): 
- возможность задать количество возвращаемых элементов (от 1 до 10) 
- уборка HTML мусора (убрать все тэги) 
- подсвечивть тэгом <b> поисковый запрос 
- вывод результирующего массива в виде HTML таблицы
Использовать Pylons.

13. Создать графическое приложение(использовать PyGTK), при этом размещение и тип виджетов, которые будут находиться в окне приложения , передаются через XML файл. Использовать SAX анализатор..
14.  Используя библиотеку pygame написать игру “Лабиринт”
15. Используя Python оболочку библиотеки OpenCV организовать передачу видео из Web камеры по сети. Написать клиент и сервер. 


16.  Используя библиотеку сокетов создать приложение пересылающее закодированные файлы, для кодировки файлов использовать алгоритм RSA (можно использовать соответствующий модуль).
17. Найти эйлеров цикл в связанном графе, а также максимальный и минимальный пути между двумя выбранными вершинами. Сделать визуальное изображение графа. 
